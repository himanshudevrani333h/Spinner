{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Himanshu\\\\Documents\\\\finalspinner\\\\src\\\\components\\\\Wheel.tsx\",\n    _s = $RefreshSig$();\n\nimport { Wheel } from \"react-custom-roulette\";\nimport { useState } from \"react\"; // import \"./styles.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Wheels = () => {\n  _s();\n\n  const data = [{\n    option: \"0\",\n    style: {\n      backgroundColor: \"green\",\n      textColor: \"white\"\n    }\n  }, {\n    option: \"1\",\n    style: {\n      backgroundColor: \"red\",\n      textColor: \"white\"\n    }\n  }, {\n    option: \"3\",\n    style: {\n      backgroundColor: \"blue\",\n      textColor: \"white\"\n    }\n  }, {\n    option: \"4\",\n    style: {\n      backgroundColor: \"pink\",\n      textColor: \"white\"\n    }\n  }, {\n    option: \"5\",\n    style: {\n      backgroundColor: \"orrange\",\n      textColor: \"white\"\n    }\n  }, {\n    option: \"6\",\n    style: {\n      backgroundColor: \"gray\",\n      textColor: \"white\"\n    }\n  }, {\n    option: \"7\",\n    style: {\n      backgroundColor: \"black\",\n      textColor: \"white\"\n    }\n  }, {\n    option: \"8\",\n    style: {\n      backgroundColor: \"red\",\n      textColor: \"white\"\n    }\n  }];\n  const [x, sx] = useState(true);\n\n  function stopSpin(e) {\n    console.log(\"stoppppppppp\", e);\n    sx(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Wheel, {\n      prizeNumber: 3,\n      mustStartSpinning: x,\n      data: data,\n      backgroundColors: [\"#3e3e3e\", \"#df3428\"],\n      textColors: [\"#ffffff\"],\n      onStopSpinning: () => stopSpin,\n      radiusLineWidth: 2,\n      outerBorderWidth: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => sx(true),\n      children: \"start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Wheels, \"ICvFQqEjntEQkhg9Xg1TCFs1UHA=\");\n\n_c = Wheels;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wheels\");","map":{"version":3,"sources":["C:/Users/Himanshu/Documents/finalspinner/src/components/Wheel.tsx"],"names":["Wheel","useState","Wheels","data","option","style","backgroundColor","textColor","x","sx","stopSpin","e","console","log"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,uBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CACA;;;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAK;AAAA;;AACzB,QAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,SAAS,EAAE;AAAvC;AAAtB,GADW,EAEX;AAAEH,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,KAAnB;AAA0BC,MAAAA,SAAS,EAAE;AAArC;AAAtB,GAFW,EAGX;AAAEH,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,MAAnB;AAA2BC,MAAAA,SAAS,EAAE;AAAtC;AAAtB,GAHW,EAIX;AAAEH,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,MAAnB;AAA2BC,MAAAA,SAAS,EAAE;AAAtC;AAAtB,GAJW,EAKX;AAAEH,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BC,MAAAA,SAAS,EAAE;AAAzC;AAAtB,GALW,EAMX;AAAEH,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,MAAnB;AAA2BC,MAAAA,SAAS,EAAE;AAAtC;AAAtB,GANW,EAOX;AAAEH,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,OAAnB;AAA4BC,MAAAA,SAAS,EAAE;AAAvC;AAAtB,GAPW,EAQX;AAAEH,IAAAA,MAAM,EAAE,GAAV;AAAeC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,KAAnB;AAA0BC,MAAAA,SAAS,EAAE;AAArC;AAAtB,GARW,CAAb;AAUA,QAAM,CAACC,CAAD,EAAIC,EAAJ,IAAUR,QAAQ,CAAU,IAAV,CAAxB;;AAEA,WAASS,QAAT,CAAkBC,CAAlB,EAAyB;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,CAA5B;AACAF,IAAAA,EAAE,CAAC,KAAD,CAAF;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,WAAW,EAAE,CADf;AAEE,MAAA,iBAAiB,EAAED,CAFrB;AAGE,MAAA,IAAI,EAAEL,IAHR;AAIE,MAAA,gBAAgB,EAAE,CAAC,SAAD,EAAY,SAAZ,CAJpB;AAKE,MAAA,UAAU,EAAE,CAAC,SAAD,CALd;AAME,MAAA,cAAc,EAAE,MAAIO,QANtB;AAOE,MAAA,eAAe,EAAE,CAPnB;AAQE,MAAA,gBAAgB,EAAE;AARpB;AAAA;AAAA;AAAA;AAAA,YADF,eAWE;AAAQ,MAAA,OAAO,EAAE,MAAMD,EAAE,CAAC,IAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA,kBADF;AAeD,CAhCM;;GAAMP,M;;KAAAA,M","sourcesContent":["import { Wheel } from \"react-custom-roulette\";\r\nimport { useState } from \"react\";\r\n// import \"./styles.css\";\r\n\r\nexport const Wheels = ()=> {\r\n  const data = [\r\n    { option: \"0\", style: { backgroundColor: \"green\", textColor: \"white\" } },\r\n    { option: \"1\", style: { backgroundColor: \"red\", textColor: \"white\" } },\r\n    { option: \"3\", style: { backgroundColor: \"blue\", textColor: \"white\" } },\r\n    { option: \"4\", style: { backgroundColor: \"pink\", textColor: \"white\" } },\r\n    { option: \"5\", style: { backgroundColor: \"orrange\", textColor: \"white\" } },\r\n    { option: \"6\", style: { backgroundColor: \"gray\", textColor: \"white\" } },\r\n    { option: \"7\", style: { backgroundColor: \"black\", textColor: \"white\" } },\r\n    { option: \"8\", style: { backgroundColor: \"red\", textColor: \"white\" } }\r\n  ];\r\n  const [x, sx] = useState<boolean>(true);\r\n\r\n  function stopSpin(e:any) {\r\n    console.log(\"stoppppppppp\", e);\r\n    sx(false);\r\n  }\r\n  return (\r\n    <>\r\n      <Wheel\r\n        prizeNumber={3}\r\n        mustStartSpinning={x}\r\n        data={data}\r\n        backgroundColors={[\"#3e3e3e\", \"#df3428\"]}\r\n        textColors={[\"#ffffff\"]}\r\n        onStopSpinning={()=>stopSpin}\r\n        radiusLineWidth={2}\r\n        outerBorderWidth={2}\r\n      />\r\n      <button onClick={() => sx(true)}>start</button>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}